<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.liquibasedemo.mapper.RoleMapper">

  <resultMap id="BaseResultMap" type="com.example.liquibasedemo.po.Role">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="created_at" jdbcType="BIGINT" property="createdAt" />
    <result column="last_updated_at" jdbcType="BIGINT" property="lastUpdatedAt" />
    <result column="test_1" jdbcType="VARCHAR" property="test1" />
  </resultMap>


  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.liquibasedemo.po.Role">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>


  <sql id="Base_Column_List">
    id, name, created_at, last_updated_at, test_1
  </sql>

  <sql id="Blob_Column_List">
    description
  </sql>


  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_roles
    where id = #{id,jdbcType=VARCHAR}
  </select>


  <select id="selectAll" resultType="com.example.liquibasedemo.po.Role">
    select * from t_roles
  </select>



  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_roles
    where id = #{id,jdbcType=VARCHAR}
  </delete>






  <insert id="insert" parameterType="com.example.liquibasedemo.po.Role">
    insert into t_roles (id, name, created_at, 
      last_updated_at, test_1, description
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{createdAt,jdbcType=BIGINT}, 
      #{lastUpdatedAt,jdbcType=BIGINT}, #{test1,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>




  <insert id="insertSelective" parameterType="com.example.liquibasedemo.po.Role">
    insert into t_roles
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="lastUpdatedAt != null">
        last_updated_at,
      </if>
      <if test="test1 != null">
        test_1,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=BIGINT},
      </if>
      <if test="lastUpdatedAt != null">
        #{lastUpdatedAt,jdbcType=BIGINT},
      </if>
      <if test="test1 != null">
        #{test1,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>








  <update id="updateByPrimaryKeySelective" parameterType="com.example.liquibasedemo.po.Role">
    update t_roles
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=BIGINT},
      </if>
      <if test="lastUpdatedAt != null">
        last_updated_at = #{lastUpdatedAt,jdbcType=BIGINT},
      </if>
      <if test="test1 != null">
        test_1 = #{test1,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>






  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.liquibasedemo.po.Role">
    update t_roles
    set name = #{name,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=BIGINT},
      last_updated_at = #{lastUpdatedAt,jdbcType=BIGINT},
      test_1 = #{test1,jdbcType=VARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>



  <update id="updateByPrimaryKey" parameterType="com.example.liquibasedemo.po.Role">
    update t_roles
    set name = #{name,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=BIGINT},
      last_updated_at = #{lastUpdatedAt,jdbcType=BIGINT},
      test_1 = #{test1,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>




</mapper>